// source: nest/trait/detector.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.nest.trait.detector.AmbientMotionSettingsTrait', null, global);
goog.exportSymbol('proto.nest.trait.detector.AmbientMotionTimingSettingsTrait', null, global);
goog.exportSymbol('proto.nest.trait.detector.AmbientMotionTrait', null, global);
goog.exportSymbol('proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent', null, global);
goog.exportSymbol('proto.nest.trait.detector.OpenCloseTrait', null, global);
goog.exportSymbol('proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent', null, global);
goog.exportSymbol('proto.nest.trait.detector.OpenCloseTrait.OpenCloseState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.detector.OpenCloseTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.detector.OpenCloseTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.detector.OpenCloseTrait.displayName = 'proto.nest.trait.detector.OpenCloseTrait';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.displayName = 'proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.detector.AmbientMotionTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.detector.AmbientMotionTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.detector.AmbientMotionTrait.displayName = 'proto.nest.trait.detector.AmbientMotionTrait';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.displayName = 'proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.detector.AmbientMotionTimingSettingsTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.displayName = 'proto.nest.trait.detector.AmbientMotionTimingSettingsTrait';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nest.trait.detector.AmbientMotionSettingsTrait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nest.trait.detector.AmbientMotionSettingsTrait.displayName = 'proto.nest.trait.detector.AmbientMotionSettingsTrait';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.detector.OpenCloseTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.detector.OpenCloseTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.OpenCloseTrait.toObject = function(includeInstance, msg) {
  var f, obj = {
    openclosestate: jspb.Message.getFieldWithDefault(msg, 1, 0),
    firstobservedat: (f = msg.getFirstobservedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    firstobservedatms: (f = msg.getFirstobservedatms()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.detector.OpenCloseTrait}
 */
proto.nest.trait.detector.OpenCloseTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.detector.OpenCloseTrait;
  return proto.nest.trait.detector.OpenCloseTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.detector.OpenCloseTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.detector.OpenCloseTrait}
 */
proto.nest.trait.detector.OpenCloseTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} */ (reader.readEnum());
      msg.setOpenclosestate(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstobservedat(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFirstobservedatms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.detector.OpenCloseTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.detector.OpenCloseTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.OpenCloseTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenclosestate();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFirstobservedat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFirstobservedatms();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseState = {
  OPEN_CLOSE_STATE_UNSPECIFIED: 0,
  OPEN_CLOSE_STATE_CLOSED: 1,
  OPEN_CLOSE_STATE_OPEN: 2,
  OPEN_CLOSE_STATE_UNKNOWN: 3,
  OPEN_CLOSE_STATE_INVALID_CALIBRATION: 4
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    openclosestate: jspb.Message.getFieldWithDefault(msg, 1, 0),
    prioropenclosestate: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent;
  return proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} */ (reader.readEnum());
      msg.setOpenclosestate(value);
      break;
    case 2:
      var value = /** @type {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} */ (reader.readEnum());
      msg.setPrioropenclosestate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenclosestate();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPrioropenclosestate();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional OpenCloseState openCloseState = 1;
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.prototype.getOpenclosestate = function() {
  return /** @type {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} value
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent} returns this
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.prototype.setOpenclosestate = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional OpenCloseState priorOpenCloseState = 2;
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState}
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.prototype.getPrioropenclosestate = function() {
  return /** @type {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} value
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent} returns this
 */
proto.nest.trait.detector.OpenCloseTrait.OpenCloseEvent.prototype.setPrioropenclosestate = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional OpenCloseState openCloseState = 1;
 * @return {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.getOpenclosestate = function() {
  return /** @type {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nest.trait.detector.OpenCloseTrait.OpenCloseState} value
 * @return {!proto.nest.trait.detector.OpenCloseTrait} returns this
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.setOpenclosestate = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp firstObservedAt = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.getFirstobservedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nest.trait.detector.OpenCloseTrait} returns this
*/
proto.nest.trait.detector.OpenCloseTrait.prototype.setFirstobservedat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nest.trait.detector.OpenCloseTrait} returns this
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.clearFirstobservedat = function() {
  return this.setFirstobservedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.hasFirstobservedat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp firstObservedAtMs = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.getFirstobservedatms = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nest.trait.detector.OpenCloseTrait} returns this
*/
proto.nest.trait.detector.OpenCloseTrait.prototype.setFirstobservedatms = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nest.trait.detector.OpenCloseTrait} returns this
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.clearFirstobservedatms = function() {
  return this.setFirstobservedatms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.detector.OpenCloseTrait.prototype.hasFirstobservedatms = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.detector.AmbientMotionTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.detector.AmbientMotionTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.detector.AmbientMotionTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionTrait.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.detector.AmbientMotionTrait}
 */
proto.nest.trait.detector.AmbientMotionTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.detector.AmbientMotionTrait;
  return proto.nest.trait.detector.AmbientMotionTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.detector.AmbientMotionTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.detector.AmbientMotionTrait}
 */
proto.nest.trait.detector.AmbientMotionTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.detector.AmbientMotionTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.detector.AmbientMotionTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.detector.AmbientMotionTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    startmotion: (f = msg.getStartmotion()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    maxholdoff: (f = msg.getMaxholdoff()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent;
  return proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartmotion(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxholdoff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartmotion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMaxholdoff();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp startMotion = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.getStartmotion = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} returns this
*/
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.setStartmotion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} returns this
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.clearStartmotion = function() {
  return this.setStartmotion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.hasStartmotion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration maxHoldOff = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.getMaxholdoff = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} returns this
*/
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.setMaxholdoff = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent} returns this
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.clearMaxholdoff = function() {
  return this.setMaxholdoff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.detector.AmbientMotionTrait.AmbientMotionEvent.prototype.hasMaxholdoff = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxholdoff: (f = msg.getMaxholdoff()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    overridemaxholdoff: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.detector.AmbientMotionTimingSettingsTrait;
  return proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setMaxholdoff(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOverridemaxholdoff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxholdoff();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getOverridemaxholdoff();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration maxHoldOff = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.getMaxholdoff = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait} returns this
*/
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.setMaxholdoff = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait} returns this
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.clearMaxholdoff = function() {
  return this.setMaxholdoff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.hasMaxholdoff = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool overrideMaxHoldOff = 2;
 * @return {boolean}
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.getOverridemaxholdoff = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nest.trait.detector.AmbientMotionTimingSettingsTrait} returns this
 */
proto.nest.trait.detector.AmbientMotionTimingSettingsTrait.prototype.setOverridemaxholdoff = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.prototype.toObject = function(opt_includeInstance) {
  return proto.nest.trait.detector.AmbientMotionSettingsTrait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nest.trait.detector.AmbientMotionSettingsTrait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabledetection: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nest.trait.detector.AmbientMotionSettingsTrait}
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nest.trait.detector.AmbientMotionSettingsTrait;
  return proto.nest.trait.detector.AmbientMotionSettingsTrait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nest.trait.detector.AmbientMotionSettingsTrait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nest.trait.detector.AmbientMotionSettingsTrait}
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabledetection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nest.trait.detector.AmbientMotionSettingsTrait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nest.trait.detector.AmbientMotionSettingsTrait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabledetection();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enableDetection = 1;
 * @return {boolean}
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.prototype.getEnabledetection = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nest.trait.detector.AmbientMotionSettingsTrait} returns this
 */
proto.nest.trait.detector.AmbientMotionSettingsTrait.prototype.setEnabledetection = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.nest.trait.detector);
