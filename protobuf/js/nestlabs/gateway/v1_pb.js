// source: nestlabs/gateway/v1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var nest_messages_pb = require('../../nest/messages_pb.js');
goog.object.extend(proto, nest_messages_pb);
var weave_common_pb = require('../../weave/common_pb.js');
goog.object.extend(proto, weave_common_pb);
var rpc_pb = require('../../rpc_pb.js');
goog.object.extend(proto, rpc_pb);
goog.exportSymbol('proto.nestlabs.gateway.v1.BatchTraitOperation', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.Event', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.IfaceInfo', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.IfaceTraitInfo', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceCommand', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceCommandRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceCommandResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceEventsNotify', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceGetState', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceGetStateRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceGetStateResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceInfo', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceNotifyRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceNotifyResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceObserveRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceObserveResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.ResourceStateNotify', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitCommand', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitEvent', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitEventsNotification', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitGetStateRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitGetStateResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitInfo', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitNotifyRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitNotifyResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitObserveRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitObserveResponse', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitOperation', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitOperation.RequestCase', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitOperation.State', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitStateNotification', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitStateNotification.NotificationContext', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitStateObserve', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.TraitUpdateStateRequest', null, global);
goog.exportSymbol('proto.nestlabs.gateway.v1.WeaveStatusReport', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitStateNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitStateNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitStateNotification.displayName = 'proto.nestlabs.gateway.v1.TraitStateNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitEventsNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.TraitEventsNotification.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitEventsNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitEventsNotification.displayName = 'proto.nestlabs.gateway.v1.TraitEventsNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.Event.displayName = 'proto.nestlabs.gateway.v1.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitRequest.displayName = 'proto.nestlabs.gateway.v1.TraitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitOperation.displayName = 'proto.nestlabs.gateway.v1.TraitOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitObserveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitObserveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitObserveRequest.displayName = 'proto.nestlabs.gateway.v1.TraitObserveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitObserveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.TraitObserveResponse.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitObserveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitObserveResponse.displayName = 'proto.nestlabs.gateway.v1.TraitObserveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitGetStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitGetStateRequest.displayName = 'proto.nestlabs.gateway.v1.TraitGetStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitGetStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitGetStateResponse.displayName = 'proto.nestlabs.gateway.v1.TraitGetStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitInfo.displayName = 'proto.nestlabs.gateway.v1.TraitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitUpdateStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitUpdateStateRequest.displayName = 'proto.nestlabs.gateway.v1.TraitUpdateStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitNotifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitNotifyRequest.displayName = 'proto.nestlabs.gateway.v1.TraitNotifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitNotifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitNotifyResponse.displayName = 'proto.nestlabs.gateway.v1.TraitNotifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitEvent.displayName = 'proto.nestlabs.gateway.v1.TraitEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitCommand.displayName = 'proto.nestlabs.gateway.v1.TraitCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.WeaveStatusReport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.WeaveStatusReport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.WeaveStatusReport.displayName = 'proto.nestlabs.gateway.v1.WeaveStatusReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceRequest.displayName = 'proto.nestlabs.gateway.v1.ResourceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceObserveRequest.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceObserveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceObserveRequest.displayName = 'proto.nestlabs.gateway.v1.ResourceObserveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.TraitStateObserve = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.TraitStateObserve, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.TraitStateObserve.displayName = 'proto.nestlabs.gateway.v1.TraitStateObserve';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceObserveResponse.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceObserveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceObserveResponse.displayName = 'proto.nestlabs.gateway.v1.ResourceObserveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceInfo.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceInfo.displayName = 'proto.nestlabs.gateway.v1.ResourceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.IfaceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.IfaceInfo.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.IfaceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.IfaceInfo.displayName = 'proto.nestlabs.gateway.v1.IfaceInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.IfaceTraitInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.IfaceTraitInfo.displayName = 'proto.nestlabs.gateway.v1.IfaceTraitInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceGetStateRequest.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceGetStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceGetStateRequest.displayName = 'proto.nestlabs.gateway.v1.ResourceGetStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceGetState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceGetState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceGetState.displayName = 'proto.nestlabs.gateway.v1.ResourceGetState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceGetStateResponse.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceGetStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceGetStateResponse.displayName = 'proto.nestlabs.gateway.v1.ResourceGetStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceNotifyRequest.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceNotifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceNotifyRequest.displayName = 'proto.nestlabs.gateway.v1.ResourceNotifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceStateNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceStateNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceStateNotify.displayName = 'proto.nestlabs.gateway.v1.ResourceStateNotify';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceEventsNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceEventsNotify.displayName = 'proto.nestlabs.gateway.v1.ResourceEventsNotify';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceNotifyResponse.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceNotifyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceNotifyResponse.displayName = 'proto.nestlabs.gateway.v1.ResourceNotifyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceCommandRequest.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceCommandRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceCommandRequest.displayName = 'proto.nestlabs.gateway.v1.ResourceCommandRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceCommand.displayName = 'proto.nestlabs.gateway.v1.ResourceCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceCommandResponse.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceCommandResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceCommandResponse.displayName = 'proto.nestlabs.gateway.v1.ResourceCommandResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.displayName = 'proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.BatchTraitOperation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.BatchTraitOperation.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.BatchTraitOperation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.BatchTraitOperation.displayName = 'proto.nestlabs.gateway.v1.BatchTraitOperation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.repeatedFields_, null);
};
goog.inherits(proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.displayName = 'proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitStateNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitStateNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitStateNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    statemask: (f = msg.getStatemask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    monotonicversion: jspb.Message.getFieldWithDefault(msg, 3, 0),
    notificationcontext: jspb.Message.getFieldWithDefault(msg, 4, 0),
    publisherversion: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitStateNotification;
  return proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitStateNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setStatemask(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMonotonicversion(value);
      break;
    case 4:
      var value = /** @type {!proto.nestlabs.gateway.v1.TraitStateNotification.NotificationContext} */ (reader.readEnum());
      msg.setNotificationcontext(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPublisherversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitStateNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatemask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getMonotonicversion();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getNotificationcontext();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPublisherversion();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.NotificationContext = {
  NOTIFICATION_CONTEXT_UNSPECIFIED: 0,
  INITIAL_OBSERVE_RESPONSE: 1
};

/**
 * optional google.protobuf.Any state = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.getState = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
*/
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask stateMask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.getStatemask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
*/
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.setStatemask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.clearStatemask = function() {
  return this.setStatemask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.hasStatemask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 monotonicVersion = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.getMonotonicversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.setMonotonicversion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional NotificationContext notificationContext = 4;
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification.NotificationContext}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.getNotificationcontext = function() {
  return /** @type {!proto.nestlabs.gateway.v1.TraitStateNotification.NotificationContext} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitStateNotification.NotificationContext} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.setNotificationcontext = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 publisherVersion = 5;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.getPublisherversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitStateNotification.prototype.setPublisherversion = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitEventsNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitEventsNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.nestlabs.gateway.v1.Event.toObject, includeInstance),
    requestutctimestamp: (f = msg.getRequestutctimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    requestsystemtimeoffsetmillis: jspb.Message.getFieldWithDefault(msg, 3, 0),
    servicereceivedtimestamp: (f = msg.getServicereceivedtimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitEventsNotification;
  return proto.nestlabs.gateway.v1.TraitEventsNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitEventsNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.Event;
      reader.readMessage(value,proto.nestlabs.gateway.v1.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRequestutctimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestsystemtimeoffsetmillis(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setServicereceivedtimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitEventsNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitEventsNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.Event.serializeBinaryToWriter
    );
  }
  f = message.getRequestutctimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRequestsystemtimeoffsetmillis();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getServicereceivedtimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Event events = 1;
 * @return {!Array<!proto.nestlabs.gateway.v1.Event>}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.Event, 1));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.Event>} value
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
*/
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.Event}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nestlabs.gateway.v1.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional google.protobuf.Timestamp requestUtcTimestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.getRequestutctimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
*/
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.setRequestutctimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.clearRequestutctimestamp = function() {
  return this.setRequestutctimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.hasRequestutctimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 requestSystemTimeOffsetMillis = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.getRequestsystemtimeoffsetmillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.setRequestsystemtimeoffsetmillis = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp serviceReceivedTimestamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.getServicereceivedtimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
*/
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.setServicereceivedtimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitEventsNotification} returns this
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.clearServicereceivedtimestamp = function() {
  return this.setServicereceivedtimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitEventsNotification.prototype.hasServicereceivedtimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    importance: jspb.Message.getFieldWithDefault(msg, 2, 0),
    eventid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    relatedeventimportance: jspb.Message.getFieldWithDefault(msg, 4, 0),
    relatedeventid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    utctimestamp: (f = msg.getUtctimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    systemtimeoffsetmillis: jspb.Message.getFieldWithDefault(msg, 7, 0),
    relaybyresourceid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    subjectresourceid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    subjectpairerid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    subjecttypename: jspb.Message.getFieldWithDefault(msg, 11, ""),
    subjectinstanceid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    schemaversion: (f = msg.getSchemaversion()) && nest_messages_pb.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.Event}
 */
proto.nestlabs.gateway.v1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.Event;
  return proto.nestlabs.gateway.v1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.Event}
 */
proto.nestlabs.gateway.v1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {!proto.weave.common.EventImportance} */ (reader.readEnum());
      msg.setImportance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventid(value);
      break;
    case 4:
      var value = /** @type {!proto.weave.common.EventImportance} */ (reader.readEnum());
      msg.setRelatedeventimportance(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRelatedeventid(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUtctimestamp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSystemtimeoffsetmillis(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelaybyresourceid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectresourceid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectpairerid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjecttypename(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectinstanceid(value);
      break;
    case 13:
      var value = new nest_messages_pb.SchemaVersion;
      reader.readMessage(value,nest_messages_pb.SchemaVersion.deserializeBinaryFromReader);
      msg.setSchemaversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getImportance();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEventid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getRelatedeventimportance();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRelatedeventid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getUtctimestamp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSystemtimeoffsetmillis();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getRelaybyresourceid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSubjectresourceid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSubjectpairerid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSubjecttypename();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSubjectinstanceid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSchemaversion();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      nest_messages_pb.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any data = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.nestlabs.gateway.v1.Event.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
*/
proto.nestlabs.gateway.v1.Event.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.Event.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional weave.common.EventImportance importance = 2;
 * @return {!proto.weave.common.EventImportance}
 */
proto.nestlabs.gateway.v1.Event.prototype.getImportance = function() {
  return /** @type {!proto.weave.common.EventImportance} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.weave.common.EventImportance} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setImportance = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 eventId = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.Event.prototype.getEventid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setEventid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional weave.common.EventImportance relatedEventImportance = 4;
 * @return {!proto.weave.common.EventImportance}
 */
proto.nestlabs.gateway.v1.Event.prototype.getRelatedeventimportance = function() {
  return /** @type {!proto.weave.common.EventImportance} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.weave.common.EventImportance} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setRelatedeventimportance = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 relatedEventId = 5;
 * @return {number}
 */
proto.nestlabs.gateway.v1.Event.prototype.getRelatedeventid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setRelatedeventid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp utcTimestamp = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nestlabs.gateway.v1.Event.prototype.getUtctimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
*/
proto.nestlabs.gateway.v1.Event.prototype.setUtctimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.clearUtctimestamp = function() {
  return this.setUtctimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.Event.prototype.hasUtctimestamp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 systemTimeOffsetMillis = 7;
 * @return {number}
 */
proto.nestlabs.gateway.v1.Event.prototype.getSystemtimeoffsetmillis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setSystemtimeoffsetmillis = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string relaybyResourceId = 8;
 * @return {string}
 */
proto.nestlabs.gateway.v1.Event.prototype.getRelaybyresourceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setRelaybyresourceid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string subjectResourceId = 9;
 * @return {string}
 */
proto.nestlabs.gateway.v1.Event.prototype.getSubjectresourceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setSubjectresourceid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string subjectPairerId = 10;
 * @return {string}
 */
proto.nestlabs.gateway.v1.Event.prototype.getSubjectpairerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setSubjectpairerid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string subjectTypeName = 11;
 * @return {string}
 */
proto.nestlabs.gateway.v1.Event.prototype.getSubjecttypename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setSubjecttypename = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string subjectInstanceId = 12;
 * @return {string}
 */
proto.nestlabs.gateway.v1.Event.prototype.getSubjectinstanceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.setSubjectinstanceid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional nest.messages.SchemaVersion schemaVersion = 13;
 * @return {?proto.nest.messages.SchemaVersion}
 */
proto.nestlabs.gateway.v1.Event.prototype.getSchemaversion = function() {
  return /** @type{?proto.nest.messages.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, nest_messages_pb.SchemaVersion, 13));
};


/**
 * @param {?proto.nest.messages.SchemaVersion|undefined} value
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
*/
proto.nestlabs.gateway.v1.Event.prototype.setSchemaversion = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.Event} returns this
 */
proto.nestlabs.gateway.v1.Event.prototype.clearSchemaversion = function() {
  return this.setSchemaversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.Event.prototype.hasSchemaversion = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    traitlabel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    requestid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitRequest;
  return proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraitlabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTraitlabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string resourceId = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.getResourceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.TraitRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.setResourceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string traitLabel = 2;
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.getTraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.TraitRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.setTraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string requestId = 3;
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.TraitRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    progress: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: (f = msg.getStatus()) && rpc_pb.Status.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.nestlabs.gateway.v1.TraitEvent.toObject(includeInstance, f),
    publisheracceptedstateversion: jspb.Message.getFieldWithDefault(msg, 5, 0),
    command: (f = msg.getCommand()) && proto.nestlabs.gateway.v1.TraitCommand.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.nestlabs.gateway.v1.TraitUpdateStateRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation}
 */
proto.nestlabs.gateway.v1.TraitOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitOperation;
  return proto.nestlabs.gateway.v1.TraitOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation}
 */
proto.nestlabs.gateway.v1.TraitOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = /** @type {!proto.nestlabs.gateway.v1.TraitOperation.State} */ (reader.readEnum());
      msg.setProgress(value);
      break;
    case 3:
      var value = new rpc_pb.Status;
      reader.readMessage(value,rpc_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 4:
      var value = new proto.nestlabs.gateway.v1.TraitEvent;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPublisheracceptedstateversion(value);
      break;
    case 6:
      var value = new proto.nestlabs.gateway.v1.TraitCommand;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitCommand.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 7:
      var value = new proto.nestlabs.gateway.v1.TraitUpdateStateRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitUpdateStateRequest.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getProgress();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      rpc_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nestlabs.gateway.v1.TraitEvent.serializeBinaryToWriter
    );
  }
  f = message.getPublisheracceptedstateversion();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.nestlabs.gateway.v1.TraitCommand.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.nestlabs.gateway.v1.TraitUpdateStateRequest.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.nestlabs.gateway.v1.TraitOperation.RequestCase = {
  REQUEST_NOT_SET: 0,
  COMMAND: 6,
  UPDATE: 7
};

/**
 * @enum {number}
 */
proto.nestlabs.gateway.v1.TraitOperation.State = {
  STATE_UNSPECIFIED: 0,
  QUEUED: 1,
  PENDING: 2,
  STARTED: 3,
  COMPLETE: 4
};

/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
*/
proto.nestlabs.gateway.v1.TraitOperation.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional State progress = 2;
 * @return {!proto.nestlabs.gateway.v1.TraitOperation.State}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getProgress = function() {
  return /** @type {!proto.nestlabs.gateway.v1.TraitOperation.State} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitOperation.State} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.setProgress = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional nest.rpc.Status status = 3;
 * @return {?proto.nest.rpc.Status}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getStatus = function() {
  return /** @type{?proto.nest.rpc.Status} */ (
    jspb.Message.getWrapperField(this, rpc_pb.Status, 3));
};


/**
 * @param {?proto.nest.rpc.Status|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
*/
proto.nestlabs.gateway.v1.TraitOperation.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TraitEvent event = 4;
 * @return {?proto.nestlabs.gateway.v1.TraitEvent}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getEvent = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitEvent} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitEvent, 4));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitEvent|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
*/
proto.nestlabs.gateway.v1.TraitOperation.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 publisherAcceptedStateVersion = 5;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getPublisheracceptedstateversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.setPublisheracceptedstateversion = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional TraitCommand command = 6;
 * @return {?proto.nestlabs.gateway.v1.TraitCommand}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getCommand = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitCommand} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitCommand, 6));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitCommand|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
*/
proto.nestlabs.gateway.v1.TraitOperation.prototype.setCommand = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional TraitUpdateStateRequest update = 7;
 * @return {?proto.nestlabs.gateway.v1.TraitUpdateStateRequest}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.getUpdate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitUpdateStateRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitUpdateStateRequest, 7));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitUpdateStateRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
*/
proto.nestlabs.gateway.v1.TraitOperation.prototype.setUpdate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitOperation} returns this
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitOperation.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitObserveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitObserveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    fieldmask: (f = msg.getFieldmask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    monotonicversionfilter: jspb.Message.getFieldWithDefault(msg, 3, 0),
    includeconfirmedstate: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    includependingoperations: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitObserveRequest;
  return proto.nestlabs.gateway.v1.TraitObserveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitObserveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldmask(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMonotonicversionfilter(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeconfirmedstate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludependingoperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitObserveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitObserveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getFieldmask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getMonotonicversionfilter();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getIncludeconfirmedstate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIncludependingoperations();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask fieldMask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.getFieldmask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.setFieldmask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.clearFieldmask = function() {
  return this.setFieldmask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.hasFieldmask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 monotonicVersionFilter = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.getMonotonicversionfilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.setMonotonicversionfilter = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool includeConfirmedState = 4;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.getIncludeconfirmedstate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.setIncludeconfirmedstate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool includePendingOperations = 5;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.getIncludependingoperations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveRequest.prototype.setIncludependingoperations = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitObserveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitObserveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    acceptedstate: (f = msg.getAcceptedstate()) && proto.nestlabs.gateway.v1.TraitStateNotification.toObject(includeInstance, f),
    traitinfo: (f = msg.getTraitinfo()) && proto.nestlabs.gateway.v1.TraitInfo.toObject(includeInstance, f),
    confirmedstate: (f = msg.getConfirmedstate()) && proto.nestlabs.gateway.v1.TraitStateNotification.toObject(includeInstance, f),
    pendingoperationsList: jspb.Message.toObjectList(msg.getPendingoperationsList(),
    proto.nestlabs.gateway.v1.TraitOperation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitObserveResponse;
  return proto.nestlabs.gateway.v1.TraitObserveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitObserveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitStateNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader);
      msg.setAcceptedstate(value);
      break;
    case 3:
      var value = new proto.nestlabs.gateway.v1.TraitInfo;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitInfo.deserializeBinaryFromReader);
      msg.setTraitinfo(value);
      break;
    case 4:
      var value = new proto.nestlabs.gateway.v1.TraitStateNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader);
      msg.setConfirmedstate(value);
      break;
    case 5:
      var value = new proto.nestlabs.gateway.v1.TraitOperation;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitOperation.deserializeBinaryFromReader);
      msg.addPendingoperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitObserveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitObserveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedstate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter
    );
  }
  f = message.getTraitinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nestlabs.gateway.v1.TraitInfo.serializeBinaryToWriter
    );
  }
  f = message.getConfirmedstate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter
    );
  }
  f = message.getPendingoperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.nestlabs.gateway.v1.TraitOperation.serializeBinaryToWriter
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TraitStateNotification acceptedState = 2;
 * @return {?proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.getAcceptedstate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitStateNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitStateNotification, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitStateNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.setAcceptedstate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.clearAcceptedstate = function() {
  return this.setAcceptedstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.hasAcceptedstate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TraitInfo traitInfo = 3;
 * @return {?proto.nestlabs.gateway.v1.TraitInfo}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.getTraitinfo = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitInfo} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitInfo, 3));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitInfo|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.setTraitinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.clearTraitinfo = function() {
  return this.setTraitinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.hasTraitinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TraitStateNotification confirmedState = 4;
 * @return {?proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.getConfirmedstate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitStateNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitStateNotification, 4));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitStateNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.setConfirmedstate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.clearConfirmedstate = function() {
  return this.setConfirmedstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.hasConfirmedstate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated TraitOperation pendingOperations = 5;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitOperation>}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.getPendingoperationsList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitOperation, 5));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitOperation>} value
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.setPendingoperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitOperation}
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.addPendingoperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.nestlabs.gateway.v1.TraitOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitObserveResponse.prototype.clearPendingoperationsList = function() {
  return this.setPendingoperationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitGetStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    fieldmask: (f = msg.getFieldmask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    monotonicversionfilter: jspb.Message.getFieldWithDefault(msg, 3, 0),
    includeconfirmedstate: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    includependingoperations: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitGetStateRequest;
  return proto.nestlabs.gateway.v1.TraitGetStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldmask(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMonotonicversionfilter(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeconfirmedstate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludependingoperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitGetStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getFieldmask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getMonotonicversionfilter();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getIncludeconfirmedstate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIncludependingoperations();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FieldMask fieldMask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.getFieldmask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.setFieldmask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.clearFieldmask = function() {
  return this.setFieldmask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.hasFieldmask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 monotonicVersionFilter = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.getMonotonicversionfilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.setMonotonicversionfilter = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool includeConfirmedState = 4;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.getIncludeconfirmedstate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.setIncludeconfirmedstate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool includePendingOperations = 5;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.getIncludependingoperations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateRequest.prototype.setIncludependingoperations = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitGetStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    acceptedstate: (f = msg.getAcceptedstate()) && proto.nestlabs.gateway.v1.TraitStateNotification.toObject(includeInstance, f),
    traitinfo: (f = msg.getTraitinfo()) && proto.nestlabs.gateway.v1.TraitInfo.toObject(includeInstance, f),
    confirmedstate: (f = msg.getConfirmedstate()) && proto.nestlabs.gateway.v1.TraitStateNotification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitGetStateResponse;
  return proto.nestlabs.gateway.v1.TraitGetStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitStateNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader);
      msg.setAcceptedstate(value);
      break;
    case 3:
      var value = new proto.nestlabs.gateway.v1.TraitInfo;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitInfo.deserializeBinaryFromReader);
      msg.setTraitinfo(value);
      break;
    case 4:
      var value = new proto.nestlabs.gateway.v1.TraitStateNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader);
      msg.setConfirmedstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitGetStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getAcceptedstate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter
    );
  }
  f = message.getTraitinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nestlabs.gateway.v1.TraitInfo.serializeBinaryToWriter
    );
  }
  f = message.getConfirmedstate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TraitStateNotification acceptedState = 2;
 * @return {?proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.getAcceptedstate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitStateNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitStateNotification, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitStateNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.setAcceptedstate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.clearAcceptedstate = function() {
  return this.setAcceptedstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.hasAcceptedstate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TraitInfo traitInfo = 3;
 * @return {?proto.nestlabs.gateway.v1.TraitInfo}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.getTraitinfo = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitInfo} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitInfo, 3));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitInfo|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.setTraitinfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.clearTraitinfo = function() {
  return this.setTraitinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.hasTraitinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TraitStateNotification confirmedState = 4;
 * @return {?proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.getConfirmedstate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitStateNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitStateNotification, 4));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitStateNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.setConfirmedstate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.clearConfirmedstate = function() {
  return this.setConfirmedstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitGetStateResponse.prototype.hasConfirmedstate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    traittype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaversion: (f = msg.getSchemaversion()) && nest_messages_pb.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitInfo}
 */
proto.nestlabs.gateway.v1.TraitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitInfo;
  return proto.nestlabs.gateway.v1.TraitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitInfo}
 */
proto.nestlabs.gateway.v1.TraitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraittype(value);
      break;
    case 2:
      var value = new nest_messages_pb.SchemaVersion;
      reader.readMessage(value,nest_messages_pb.SchemaVersion.deserializeBinaryFromReader);
      msg.setSchemaversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraittype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaversion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      nest_messages_pb.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string traitType = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.getTraittype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.TraitInfo} returns this
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.setTraittype = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional nest.messages.SchemaVersion schemaVersion = 2;
 * @return {?proto.nest.messages.SchemaVersion}
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.getSchemaversion = function() {
  return /** @type{?proto.nest.messages.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, nest_messages_pb.SchemaVersion, 2));
};


/**
 * @param {?proto.nest.messages.SchemaVersion|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitInfo} returns this
*/
proto.nestlabs.gateway.v1.TraitInfo.prototype.setSchemaversion = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitInfo} returns this
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.clearSchemaversion = function() {
  return this.setSchemaversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitInfo.prototype.hasSchemaversion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitUpdateStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    state: (f = msg.getState()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    statemask: (f = msg.getStatemask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    matchpublisherversion: jspb.Message.getFieldWithDefault(msg, 4, 0),
    schemaversion: (f = msg.getSchemaversion()) && nest_messages_pb.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitUpdateStateRequest;
  return proto.nestlabs.gateway.v1.TraitUpdateStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setStatemask(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMatchpublisherversion(value);
      break;
    case 5:
      var value = new nest_messages_pb.SchemaVersion;
      reader.readMessage(value,nest_messages_pb.SchemaVersion.deserializeBinaryFromReader);
      msg.setSchemaversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitUpdateStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStatemask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getMatchpublisherversion();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSchemaversion();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      nest_messages_pb.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any state = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.getState = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask stateMask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.getStatemask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.setStatemask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.clearStatemask = function() {
  return this.setStatemask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.hasStatemask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 matchPublisherVersion = 4;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.getMatchpublisherversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.setMatchpublisherversion = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional nest.messages.SchemaVersion schemaVersion = 5;
 * @return {?proto.nest.messages.SchemaVersion}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.getSchemaversion = function() {
  return /** @type{?proto.nest.messages.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, nest_messages_pb.SchemaVersion, 5));
};


/**
 * @param {?proto.nest.messages.SchemaVersion|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.setSchemaversion = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.clearSchemaversion = function() {
  return this.setSchemaversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitUpdateStateRequest.prototype.hasSchemaversion = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitNotifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    confirmedstate: (f = msg.getConfirmedstate()) && proto.nestlabs.gateway.v1.TraitStateNotification.toObject(includeInstance, f),
    events: (f = msg.getEvents()) && proto.nestlabs.gateway.v1.TraitEventsNotification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitNotifyRequest;
  return proto.nestlabs.gateway.v1.TraitNotifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitStateNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader);
      msg.setConfirmedstate(value);
      break;
    case 3:
      var value = new proto.nestlabs.gateway.v1.TraitEventsNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitEventsNotification.deserializeBinaryFromReader);
      msg.setEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitNotifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getConfirmedstate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter
    );
  }
  f = message.getEvents();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nestlabs.gateway.v1.TraitEventsNotification.serializeBinaryToWriter
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TraitStateNotification confirmedState = 2;
 * @return {?proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.getConfirmedstate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitStateNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitStateNotification, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitStateNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.setConfirmedstate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.clearConfirmedstate = function() {
  return this.setConfirmedstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.hasConfirmedstate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TraitEventsNotification events = 3;
 * @return {?proto.nestlabs.gateway.v1.TraitEventsNotification}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.getEvents = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitEventsNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitEventsNotification, 3));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitEventsNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest} returns this
*/
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.setEvents = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyRequest} returns this
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.clearEvents = function() {
  return this.setEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitNotifyRequest.prototype.hasEvents = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitNotifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyResponse}
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitNotifyResponse;
  return proto.nestlabs.gateway.v1.TraitNotifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyResponse}
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitNotifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyResponse} returns this
*/
proto.nestlabs.gateway.v1.TraitNotifyResponse.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyResponse} returns this
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitNotifyResponse.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitEvent}
 */
proto.nestlabs.gateway.v1.TraitEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitEvent;
  return proto.nestlabs.gateway.v1.TraitEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitEvent}
 */
proto.nestlabs.gateway.v1.TraitEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any event = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.nestlabs.gateway.v1.TraitEvent.prototype.getEvent = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitEvent} returns this
*/
proto.nestlabs.gateway.v1.TraitEvent.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitEvent} returns this
 */
proto.nestlabs.gateway.v1.TraitEvent.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitEvent.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitrequest: (f = msg.getTraitrequest()) && proto.nestlabs.gateway.v1.TraitRequest.toObject(includeInstance, f),
    command: (f = msg.getCommand()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    expirytime: (f = msg.getExpirytime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    authenticator: msg.getAuthenticator_asB64(),
    matchpublisherversion: jspb.Message.getFieldWithDefault(msg, 5, 0),
    schemaversion: (f = msg.getSchemaversion()) && nest_messages_pb.SchemaVersion.toObject(includeInstance, f),
    namespaceid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitCommand}
 */
proto.nestlabs.gateway.v1.TraitCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitCommand;
  return proto.nestlabs.gateway.v1.TraitCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitCommand}
 */
proto.nestlabs.gateway.v1.TraitCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitRequest.deserializeBinaryFromReader);
      msg.setTraitrequest(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirytime(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAuthenticator(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMatchpublisherversion(value);
      break;
    case 6:
      var value = new nest_messages_pb.SchemaVersion;
      reader.readMessage(value,nest_messages_pb.SchemaVersion.deserializeBinaryFromReader);
      msg.setSchemaversion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitRequest.serializeBinaryToWriter
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getExpirytime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAuthenticator_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getMatchpublisherversion();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSchemaversion();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      nest_messages_pb.SchemaVersion.serializeBinaryToWriter
    );
  }
  f = message.getNamespaceid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional TraitRequest traitRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.TraitRequest}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getTraitrequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
*/
proto.nestlabs.gateway.v1.TraitCommand.prototype.setTraitrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.clearTraitrequest = function() {
  return this.setTraitrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.hasTraitrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any command = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getCommand = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
*/
proto.nestlabs.gateway.v1.TraitCommand.prototype.setCommand = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp expiryTime = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getExpirytime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
*/
proto.nestlabs.gateway.v1.TraitCommand.prototype.setExpirytime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.clearExpirytime = function() {
  return this.setExpirytime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.hasExpirytime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes authenticator = 4;
 * @return {!(string|Uint8Array)}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getAuthenticator = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes authenticator = 4;
 * This is a type-conversion wrapper around `getAuthenticator()`
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getAuthenticator_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAuthenticator()));
};


/**
 * optional bytes authenticator = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAuthenticator()`
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getAuthenticator_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAuthenticator()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.setAuthenticator = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 matchPublisherVersion = 5;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getMatchpublisherversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.setMatchpublisherversion = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional nest.messages.SchemaVersion schemaVersion = 6;
 * @return {?proto.nest.messages.SchemaVersion}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getSchemaversion = function() {
  return /** @type{?proto.nest.messages.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, nest_messages_pb.SchemaVersion, 6));
};


/**
 * @param {?proto.nest.messages.SchemaVersion|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
*/
proto.nestlabs.gateway.v1.TraitCommand.prototype.setSchemaversion = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.clearSchemaversion = function() {
  return this.setSchemaversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.hasSchemaversion = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string namespaceId = 7;
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.getNamespaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.TraitCommand} returns this
 */
proto.nestlabs.gateway.v1.TraitCommand.prototype.setNamespaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.WeaveStatusReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.WeaveStatusReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statuscode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.WeaveStatusReport}
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.WeaveStatusReport;
  return proto.nestlabs.gateway.v1.WeaveStatusReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.WeaveStatusReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.WeaveStatusReport}
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProfileid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatuscode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.WeaveStatusReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.WeaveStatusReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getStatuscode();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 profileId = 1;
 * @return {number}
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.prototype.getProfileid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.WeaveStatusReport} returns this
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.prototype.setProfileid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 statusCode = 2;
 * @return {number}
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.prototype.getStatuscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.WeaveStatusReport} returns this
 */
proto.nestlabs.gateway.v1.WeaveStatusReport.prototype.setStatuscode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    namespaceid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceRequest;
  return proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespaceid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNamespaceid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string resourceId = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.getResourceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.setResourceid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string requestId = 2;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.getRequestid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.setRequestid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string namespaceId = 3;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.getNamespaceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceRequest.prototype.setNamespaceid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceObserveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceObserveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    traitstateobservesList: jspb.Message.toObjectList(msg.getTraitstateobservesList(),
    proto.nestlabs.gateway.v1.TraitStateObserve.toObject, includeInstance),
    includeconfirmedstate: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    includependingoperations: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceObserveRequest;
  return proto.nestlabs.gateway.v1.ResourceObserveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceObserveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitStateObserve;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateObserve.deserializeBinaryFromReader);
      msg.addTraitstateobserves(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeconfirmedstate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludependingoperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceObserveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceObserveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getTraitstateobservesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitStateObserve.serializeBinaryToWriter
    );
  }
  f = message.getIncludeconfirmedstate();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIncludependingoperations();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TraitStateObserve traitStateObserves = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitStateObserve>}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.getTraitstateobservesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitStateObserve>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitStateObserve, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitStateObserve>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.setTraitstateobservesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitStateObserve=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.addTraitstateobserves = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.TraitStateObserve, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.clearTraitstateobservesList = function() {
  return this.setTraitstateobservesList([]);
};


/**
 * optional bool includeConfirmedState = 3;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.getIncludeconfirmedstate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.setIncludeconfirmedstate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool includePendingOperations = 4;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.getIncludependingoperations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveRequest.prototype.setIncludependingoperations = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.TraitStateObserve.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.TraitStateObserve} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitStateObserve.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitlabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldmask: (f = msg.getFieldmask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    monotonicversionfilter: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.TraitStateObserve;
  return proto.nestlabs.gateway.v1.TraitStateObserve.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.TraitStateObserve} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraitlabel(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldmask(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMonotonicversionfilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.TraitStateObserve.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.TraitStateObserve} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.TraitStateObserve.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitlabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldmask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getMonotonicversionfilter();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string traitLabel = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.getTraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve} returns this
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.setTraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask fieldMask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.getFieldmask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve} returns this
*/
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.setFieldmask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve} returns this
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.clearFieldmask = function() {
  return this.setFieldmask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.hasFieldmask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 monotonicVersionFilter = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.getMonotonicversionfilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.TraitStateObserve} returns this
 */
proto.nestlabs.gateway.v1.TraitStateObserve.prototype.setMonotonicversionfilter = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceObserveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceObserveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    resourceinfo: (f = msg.getResourceinfo()) && proto.nestlabs.gateway.v1.ResourceInfo.toObject(includeInstance, f),
    traitresponsesList: jspb.Message.toObjectList(msg.getTraitresponsesList(),
    proto.nestlabs.gateway.v1.TraitObserveResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceObserveResponse;
  return proto.nestlabs.gateway.v1.ResourceObserveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceObserveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.ResourceInfo;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceInfo.deserializeBinaryFromReader);
      msg.setResourceinfo(value);
      break;
    case 3:
      var value = new proto.nestlabs.gateway.v1.TraitObserveResponse;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitObserveResponse.deserializeBinaryFromReader);
      msg.addTraitresponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceObserveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceObserveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getResourceinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.ResourceInfo.serializeBinaryToWriter
    );
  }
  f = message.getTraitresponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.nestlabs.gateway.v1.TraitObserveResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourceInfo resourceInfo = 2;
 * @return {?proto.nestlabs.gateway.v1.ResourceInfo}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.getResourceinfo = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceInfo} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceInfo, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceInfo|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.setResourceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.clearResourceinfo = function() {
  return this.setResourceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.hasResourceinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TraitObserveResponse traitResponses = 3;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitObserveResponse>}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.getTraitresponsesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitObserveResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitObserveResponse, 3));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitObserveResponse>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.setTraitresponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitObserveResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitObserveResponse}
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.addTraitresponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.nestlabs.gateway.v1.TraitObserveResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceObserveResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceObserveResponse.prototype.clearTraitresponsesList = function() {
  return this.setTraitresponsesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceInfo.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcetype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    traitinfosMap: (f = msg.getTraitinfosMap()) ? f.toObject(includeInstance, proto.nestlabs.gateway.v1.TraitInfo.toObject) : [],
    ifaceinfosList: jspb.Message.toObjectList(msg.getIfaceinfosList(),
    proto.nestlabs.gateway.v1.IfaceInfo.toObject, includeInstance),
    currentschemaversion: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo}
 */
proto.nestlabs.gateway.v1.ResourceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceInfo;
  return proto.nestlabs.gateway.v1.ResourceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo}
 */
proto.nestlabs.gateway.v1.ResourceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcetype(value);
      break;
    case 5:
      var value = msg.getTraitinfosMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.nestlabs.gateway.v1.TraitInfo.deserializeBinaryFromReader, "", new proto.nestlabs.gateway.v1.TraitInfo());
         });
      break;
    case 6:
      var value = new proto.nestlabs.gateway.v1.IfaceInfo;
      reader.readMessage(value,proto.nestlabs.gateway.v1.IfaceInfo.deserializeBinaryFromReader);
      msg.addIfaceinfos(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentschemaversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcetype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTraitinfosMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.nestlabs.gateway.v1.TraitInfo.serializeBinaryToWriter);
  }
  f = message.getIfaceinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.nestlabs.gateway.v1.IfaceInfo.serializeBinaryToWriter
    );
  }
  f = message.getCurrentschemaversion();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string resourceType = 4;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.getResourcetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo} returns this
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.setResourcetype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, TraitInfo> traitInfos = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.nestlabs.gateway.v1.TraitInfo>}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.getTraitinfosMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.nestlabs.gateway.v1.TraitInfo>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.nestlabs.gateway.v1.TraitInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo} returns this
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.clearTraitinfosMap = function() {
  this.getTraitinfosMap().clear();
  return this;};


/**
 * repeated IfaceInfo ifaceInfos = 6;
 * @return {!Array<!proto.nestlabs.gateway.v1.IfaceInfo>}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.getIfaceinfosList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.IfaceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.IfaceInfo, 6));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.IfaceInfo>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo} returns this
*/
proto.nestlabs.gateway.v1.ResourceInfo.prototype.setIfaceinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.IfaceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.addIfaceinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.nestlabs.gateway.v1.IfaceInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo} returns this
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.clearIfaceinfosList = function() {
  return this.setIfaceinfosList([]);
};


/**
 * optional uint32 currentSchemaVersion = 7;
 * @return {number}
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.getCurrentschemaversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.ResourceInfo} returns this
 */
proto.nestlabs.gateway.v1.ResourceInfo.prototype.setCurrentschemaversion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.IfaceInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.IfaceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.IfaceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.IfaceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ifacetype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ifacetraitinfosList: jspb.Message.toObjectList(msg.getIfacetraitinfosList(),
    proto.nestlabs.gateway.v1.IfaceTraitInfo.toObject, includeInstance),
    schemaversion: (f = msg.getSchemaversion()) && nest_messages_pb.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo}
 */
proto.nestlabs.gateway.v1.IfaceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.IfaceInfo;
  return proto.nestlabs.gateway.v1.IfaceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.IfaceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo}
 */
proto.nestlabs.gateway.v1.IfaceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfacetype(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.IfaceTraitInfo;
      reader.readMessage(value,proto.nestlabs.gateway.v1.IfaceTraitInfo.deserializeBinaryFromReader);
      msg.addIfacetraitinfos(value);
      break;
    case 6:
      var value = new nest_messages_pb.SchemaVersion;
      reader.readMessage(value,nest_messages_pb.SchemaVersion.deserializeBinaryFromReader);
      msg.setSchemaversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.IfaceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.IfaceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.IfaceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIfacetype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIfacetraitinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.IfaceTraitInfo.serializeBinaryToWriter
    );
  }
  f = message.getSchemaversion();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      nest_messages_pb.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ifaceType = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.getIfacetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo} returns this
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.setIfacetype = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated IfaceTraitInfo ifaceTraitInfos = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.IfaceTraitInfo>}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.getIfacetraitinfosList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.IfaceTraitInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.IfaceTraitInfo, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.IfaceTraitInfo>} value
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo} returns this
*/
proto.nestlabs.gateway.v1.IfaceInfo.prototype.setIfacetraitinfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.IfaceTraitInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.IfaceTraitInfo}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.addIfacetraitinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.IfaceTraitInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo} returns this
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.clearIfacetraitinfosList = function() {
  return this.setIfacetraitinfosList([]);
};


/**
 * optional nest.messages.SchemaVersion schemaVersion = 6;
 * @return {?proto.nest.messages.SchemaVersion}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.getSchemaversion = function() {
  return /** @type{?proto.nest.messages.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, nest_messages_pb.SchemaVersion, 6));
};


/**
 * @param {?proto.nest.messages.SchemaVersion|undefined} value
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo} returns this
*/
proto.nestlabs.gateway.v1.IfaceInfo.prototype.setSchemaversion = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.IfaceInfo} returns this
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.clearSchemaversion = function() {
  return this.setSchemaversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.IfaceInfo.prototype.hasSchemaversion = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.IfaceTraitInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.IfaceTraitInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ifacetraitlabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resourcetraitlabel: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.IfaceTraitInfo}
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.IfaceTraitInfo;
  return proto.nestlabs.gateway.v1.IfaceTraitInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.IfaceTraitInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.IfaceTraitInfo}
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfacetraitlabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourcetraitlabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.IfaceTraitInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.IfaceTraitInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIfacetraitlabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResourcetraitlabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ifaceTraitLabel = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.prototype.getIfacetraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.IfaceTraitInfo} returns this
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.prototype.setIfacetraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string resourceTraitLabel = 2;
 * @return {string}
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.prototype.getResourcetraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.IfaceTraitInfo} returns this
 */
proto.nestlabs.gateway.v1.IfaceTraitInfo.prototype.setResourcetraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceGetStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    resourcegetstatesList: jspb.Message.toObjectList(msg.getResourcegetstatesList(),
    proto.nestlabs.gateway.v1.ResourceGetState.toObject, includeInstance),
    includeconfirmedstate: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    includependingoperations: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceGetStateRequest;
  return proto.nestlabs.gateway.v1.ResourceGetStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.ResourceGetState;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceGetState.deserializeBinaryFromReader);
      msg.addResourcegetstates(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeconfirmedstate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludependingoperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceGetStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getResourcegetstatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.ResourceGetState.serializeBinaryToWriter
    );
  }
  f = message.getIncludeconfirmedstate();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIncludependingoperations();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ResourceGetState resourceGetStates = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.ResourceGetState>}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.getResourcegetstatesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.ResourceGetState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.ResourceGetState, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.ResourceGetState>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.setResourcegetstatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.ResourceGetState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.addResourcegetstates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.ResourceGetState, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.clearResourcegetstatesList = function() {
  return this.setResourcegetstatesList([]);
};


/**
 * optional bool includeConfirmedState = 3;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.getIncludeconfirmedstate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.setIncludeconfirmedstate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool includePendingOperations = 4;
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.getIncludependingoperations = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateRequest.prototype.setIncludependingoperations = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceGetState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceGetState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceGetState.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitlabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldmask: (f = msg.getFieldmask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f),
    monotonicversionfilter: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState}
 */
proto.nestlabs.gateway.v1.ResourceGetState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceGetState;
  return proto.nestlabs.gateway.v1.ResourceGetState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceGetState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState}
 */
proto.nestlabs.gateway.v1.ResourceGetState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraitlabel(value);
      break;
    case 2:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setFieldmask(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMonotonicversionfilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceGetState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceGetState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceGetState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitlabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldmask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getMonotonicversionfilter();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string traitLabel = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.getTraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.setTraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.FieldMask fieldMask = 2;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.getFieldmask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 2));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState} returns this
*/
proto.nestlabs.gateway.v1.ResourceGetState.prototype.setFieldmask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.clearFieldmask = function() {
  return this.setFieldmask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.hasFieldmask = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 monotonicVersionFilter = 3;
 * @return {number}
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.getMonotonicversionfilter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetState} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetState.prototype.setMonotonicversionfilter = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceGetStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    resourceinfo: (f = msg.getResourceinfo()) && proto.nestlabs.gateway.v1.ResourceInfo.toObject(includeInstance, f),
    traitresponsesList: jspb.Message.toObjectList(msg.getTraitresponsesList(),
    proto.nestlabs.gateway.v1.TraitGetStateResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceGetStateResponse;
  return proto.nestlabs.gateway.v1.ResourceGetStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.ResourceInfo;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceInfo.deserializeBinaryFromReader);
      msg.setResourceinfo(value);
      break;
    case 3:
      var value = new proto.nestlabs.gateway.v1.TraitGetStateResponse;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitGetStateResponse.deserializeBinaryFromReader);
      msg.addTraitresponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceGetStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getResourceinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.ResourceInfo.serializeBinaryToWriter
    );
  }
  f = message.getTraitresponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.nestlabs.gateway.v1.TraitGetStateResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ResourceInfo resourceInfo = 2;
 * @return {?proto.nestlabs.gateway.v1.ResourceInfo}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.getResourceinfo = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceInfo} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceInfo, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceInfo|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.setResourceinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.clearResourceinfo = function() {
  return this.setResourceinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.hasResourceinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TraitGetStateResponse traitResponses = 3;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitGetStateResponse>}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.getTraitresponsesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitGetStateResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitGetStateResponse, 3));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitGetStateResponse>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.setTraitresponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitGetStateResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitGetStateResponse}
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.addTraitresponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.nestlabs.gateway.v1.TraitGetStateResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceGetStateResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceGetStateResponse.prototype.clearTraitresponsesList = function() {
  return this.setTraitresponsesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceNotifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    resourcestatenotifiesList: jspb.Message.toObjectList(msg.getResourcestatenotifiesList(),
    proto.nestlabs.gateway.v1.ResourceStateNotify.toObject, includeInstance),
    resourceeventsnotifiesList: jspb.Message.toObjectList(msg.getResourceeventsnotifiesList(),
    proto.nestlabs.gateway.v1.ResourceEventsNotify.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceNotifyRequest;
  return proto.nestlabs.gateway.v1.ResourceNotifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.ResourceStateNotify;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceStateNotify.deserializeBinaryFromReader);
      msg.addResourcestatenotifies(value);
      break;
    case 3:
      var value = new proto.nestlabs.gateway.v1.ResourceEventsNotify;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceEventsNotify.deserializeBinaryFromReader);
      msg.addResourceeventsnotifies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceNotifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getResourcestatenotifiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.ResourceStateNotify.serializeBinaryToWriter
    );
  }
  f = message.getResourceeventsnotifiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.nestlabs.gateway.v1.ResourceEventsNotify.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ResourceStateNotify resourceStateNotifies = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.ResourceStateNotify>}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.getResourcestatenotifiesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.ResourceStateNotify>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.ResourceStateNotify, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.ResourceStateNotify>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.setResourcestatenotifiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.ResourceStateNotify=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.ResourceStateNotify}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.addResourcestatenotifies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.ResourceStateNotify, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.clearResourcestatenotifiesList = function() {
  return this.setResourcestatenotifiesList([]);
};


/**
 * repeated ResourceEventsNotify resourceEventsNotifies = 3;
 * @return {!Array<!proto.nestlabs.gateway.v1.ResourceEventsNotify>}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.getResourceeventsnotifiesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.ResourceEventsNotify>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.ResourceEventsNotify, 3));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.ResourceEventsNotify>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.setResourceeventsnotifiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.ResourceEventsNotify=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.ResourceEventsNotify}
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.addResourceeventsnotifies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.nestlabs.gateway.v1.ResourceEventsNotify, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceNotifyRequest.prototype.clearResourceeventsnotifiesList = function() {
  return this.setResourceeventsnotifiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceStateNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceStateNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitlabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    confirmedstate: (f = msg.getConfirmedstate()) && proto.nestlabs.gateway.v1.TraitStateNotification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceStateNotify}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceStateNotify;
  return proto.nestlabs.gateway.v1.ResourceStateNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceStateNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceStateNotify}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraitlabel(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitStateNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitStateNotification.deserializeBinaryFromReader);
      msg.setConfirmedstate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceStateNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceStateNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitlabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfirmedstate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitStateNotification.serializeBinaryToWriter
    );
  }
};


/**
 * optional string traitLabel = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.getTraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceStateNotify} returns this
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.setTraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TraitStateNotification confirmedState = 2;
 * @return {?proto.nestlabs.gateway.v1.TraitStateNotification}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.getConfirmedstate = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitStateNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitStateNotification, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitStateNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceStateNotify} returns this
*/
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.setConfirmedstate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceStateNotify} returns this
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.clearConfirmedstate = function() {
  return this.setConfirmedstate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceStateNotify.prototype.hasConfirmedstate = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceEventsNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceEventsNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitlabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    events: (f = msg.getEvents()) && proto.nestlabs.gateway.v1.TraitEventsNotification.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceEventsNotify}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceEventsNotify;
  return proto.nestlabs.gateway.v1.ResourceEventsNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceEventsNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceEventsNotify}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraitlabel(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitEventsNotification;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitEventsNotification.deserializeBinaryFromReader);
      msg.setEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceEventsNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceEventsNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitlabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvents();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitEventsNotification.serializeBinaryToWriter
    );
  }
};


/**
 * optional string traitLabel = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.getTraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceEventsNotify} returns this
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.setTraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TraitEventsNotification events = 2;
 * @return {?proto.nestlabs.gateway.v1.TraitEventsNotification}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.getEvents = function() {
  return /** @type{?proto.nestlabs.gateway.v1.TraitEventsNotification} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.TraitEventsNotification, 2));
};


/**
 * @param {?proto.nestlabs.gateway.v1.TraitEventsNotification|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceEventsNotify} returns this
*/
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.setEvents = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceEventsNotify} returns this
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.clearEvents = function() {
  return this.setEvents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceEventsNotify.prototype.hasEvents = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceNotifyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    traitresponsesList: jspb.Message.toObjectList(msg.getTraitresponsesList(),
    proto.nestlabs.gateway.v1.TraitNotifyResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyResponse}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceNotifyResponse;
  return proto.nestlabs.gateway.v1.ResourceNotifyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyResponse}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitNotifyResponse;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitNotifyResponse.deserializeBinaryFromReader);
      msg.addTraitresponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceNotifyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getTraitresponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitNotifyResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TraitNotifyResponse traitResponses = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitNotifyResponse>}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.getTraitresponsesList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitNotifyResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitNotifyResponse, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitNotifyResponse>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.setTraitresponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitNotifyResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitNotifyResponse}
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.addTraitresponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.TraitNotifyResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceNotifyResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceNotifyResponse.prototype.clearTraitresponsesList = function() {
  return this.setTraitresponsesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceCommandRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    resourcecommandsList: jspb.Message.toObjectList(msg.getResourcecommandsList(),
    proto.nestlabs.gateway.v1.ResourceCommand.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandRequest}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceCommandRequest;
  return proto.nestlabs.gateway.v1.ResourceCommandRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandRequest}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.ResourceCommand;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceCommand.deserializeBinaryFromReader);
      msg.addResourcecommands(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceCommandRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getResourcecommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.ResourceCommand.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ResourceCommand resourceCommands = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.ResourceCommand>}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.getResourcecommandsList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.ResourceCommand>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.ResourceCommand, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.ResourceCommand>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandRequest} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.setResourcecommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.ResourceCommand=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand}
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.addResourcecommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.ResourceCommand, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandRequest} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommandRequest.prototype.clearResourcecommandsList = function() {
  return this.setResourcecommandsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitlabel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    command: (f = msg.getCommand()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    expirytime: (f = msg.getExpirytime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    authenticator: msg.getAuthenticator_asB64(),
    matchpublisherversion: jspb.Message.getFieldWithDefault(msg, 5, 0),
    schemaversion: (f = msg.getSchemaversion()) && nest_messages_pb.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand}
 */
proto.nestlabs.gateway.v1.ResourceCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceCommand;
  return proto.nestlabs.gateway.v1.ResourceCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand}
 */
proto.nestlabs.gateway.v1.ResourceCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraitlabel(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirytime(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAuthenticator(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMatchpublisherversion(value);
      break;
    case 6:
      var value = new nest_messages_pb.SchemaVersion;
      reader.readMessage(value,nest_messages_pb.SchemaVersion.deserializeBinaryFromReader);
      msg.setSchemaversion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitlabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getExpirytime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAuthenticator_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getMatchpublisherversion();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSchemaversion();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      nest_messages_pb.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional string traitLabel = 1;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getTraitlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.setTraitlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any command = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getCommand = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommand.prototype.setCommand = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp expiryTime = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getExpirytime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommand.prototype.setExpirytime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.clearExpirytime = function() {
  return this.setExpirytime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.hasExpirytime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes authenticator = 4;
 * @return {!(string|Uint8Array)}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getAuthenticator = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes authenticator = 4;
 * This is a type-conversion wrapper around `getAuthenticator()`
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getAuthenticator_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAuthenticator()));
};


/**
 * optional bytes authenticator = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAuthenticator()`
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getAuthenticator_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAuthenticator()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.setAuthenticator = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 matchPublisherVersion = 5;
 * @return {number}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getMatchpublisherversion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.setMatchpublisherversion = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional nest.messages.SchemaVersion schemaVersion = 6;
 * @return {?proto.nest.messages.SchemaVersion}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.getSchemaversion = function() {
  return /** @type{?proto.nest.messages.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, nest_messages_pb.SchemaVersion, 6));
};


/**
 * @param {?proto.nest.messages.SchemaVersion|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommand.prototype.setSchemaversion = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommand} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.clearSchemaversion = function() {
  return this.setSchemaversion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceCommand.prototype.hasSchemaversion = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceCommandResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resourcerequest: (f = msg.getResourcerequest()) && proto.nestlabs.gateway.v1.ResourceRequest.toObject(includeInstance, f),
    traitoperationsList: jspb.Message.toObjectList(msg.getTraitoperationsList(),
    proto.nestlabs.gateway.v1.TraitOperation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceCommandResponse;
  return proto.nestlabs.gateway.v1.ResourceCommandResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceRequest.deserializeBinaryFromReader);
      msg.setResourcerequest(value);
      break;
    case 2:
      var value = new proto.nestlabs.gateway.v1.TraitOperation;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitOperation.deserializeBinaryFromReader);
      msg.addTraitoperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceCommandResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResourcerequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceRequest.serializeBinaryToWriter
    );
  }
  f = message.getTraitoperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nestlabs.gateway.v1.TraitOperation.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResourceRequest resourceRequest = 1;
 * @return {?proto.nestlabs.gateway.v1.ResourceRequest}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.getResourcerequest = function() {
  return /** @type{?proto.nestlabs.gateway.v1.ResourceRequest} */ (
    jspb.Message.getWrapperField(this, proto.nestlabs.gateway.v1.ResourceRequest, 1));
};


/**
 * @param {?proto.nestlabs.gateway.v1.ResourceRequest|undefined} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.setResourcerequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.clearResourcerequest = function() {
  return this.setResourcerequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.hasResourcerequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TraitOperation traitOperations = 2;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitOperation>}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.getTraitoperationsList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitOperation, 2));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitOperation>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.setTraitoperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitOperation}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.addTraitoperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nestlabs.gateway.v1.TraitOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommandResponse.prototype.clearTraitoperationsList = function() {
  return this.setTraitoperationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.nestlabs.gateway.v1.TraitUpdateStateRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest}
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest;
  return proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest}
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitUpdateStateRequest;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitUpdateStateRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitUpdateStateRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TraitUpdateStateRequest requests = 1;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitUpdateStateRequest>}
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitUpdateStateRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitUpdateStateRequest, 1));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitUpdateStateRequest>} value
 * @return {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest} returns this
*/
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitUpdateStateRequest}
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nestlabs.gateway.v1.TraitUpdateStateRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest} returns this
 */
proto.nestlabs.gateway.v1.BatchTraitUpdateStateRequest.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.BatchTraitOperation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.BatchTraitOperation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.toObject = function(includeInstance, msg) {
  var f, obj = {
    traitoperationList: jspb.Message.toObjectList(msg.getTraitoperationList(),
    proto.nestlabs.gateway.v1.TraitOperation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.BatchTraitOperation}
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.BatchTraitOperation;
  return proto.nestlabs.gateway.v1.BatchTraitOperation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.BatchTraitOperation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.BatchTraitOperation}
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.TraitOperation;
      reader.readMessage(value,proto.nestlabs.gateway.v1.TraitOperation.deserializeBinaryFromReader);
      msg.addTraitoperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.BatchTraitOperation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.BatchTraitOperation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraitoperationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.TraitOperation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TraitOperation traitOperation = 1;
 * @return {!Array<!proto.nestlabs.gateway.v1.TraitOperation>}
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.prototype.getTraitoperationList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.TraitOperation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.TraitOperation, 1));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.TraitOperation>} value
 * @return {!proto.nestlabs.gateway.v1.BatchTraitOperation} returns this
*/
proto.nestlabs.gateway.v1.BatchTraitOperation.prototype.setTraitoperationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.TraitOperation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.TraitOperation}
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.prototype.addTraitoperation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nestlabs.gateway.v1.TraitOperation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.BatchTraitOperation} returns this
 */
proto.nestlabs.gateway.v1.BatchTraitOperation.prototype.clearTraitoperationList = function() {
  return this.setTraitoperationList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.toObject = function(opt_includeInstance) {
  return proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.toObject = function(includeInstance, msg) {
  var f, obj = {
    resoucecommandresponseList: jspb.Message.toObjectList(msg.getResoucecommandresponseList(),
    proto.nestlabs.gateway.v1.ResourceCommandResponse.toObject, includeInstance),
    unknown: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI;
  return proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nestlabs.gateway.v1.ResourceCommandResponse;
      reader.readMessage(value,proto.nestlabs.gateway.v1.ResourceCommandResponse.deserializeBinaryFromReader);
      msg.addResoucecommandresponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnknown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResoucecommandresponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.nestlabs.gateway.v1.ResourceCommandResponse.serializeBinaryToWriter
    );
  }
  f = message.getUnknown();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ResourceCommandResponse resouceCommandResponse = 1;
 * @return {!Array<!proto.nestlabs.gateway.v1.ResourceCommandResponse>}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.getResoucecommandresponseList = function() {
  return /** @type{!Array<!proto.nestlabs.gateway.v1.ResourceCommandResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nestlabs.gateway.v1.ResourceCommandResponse, 1));
};


/**
 * @param {!Array<!proto.nestlabs.gateway.v1.ResourceCommandResponse>} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI} returns this
*/
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.setResoucecommandresponseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nestlabs.gateway.v1.ResourceCommandResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponse}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.addResoucecommandresponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nestlabs.gateway.v1.ResourceCommandResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.clearResoucecommandresponseList = function() {
  return this.setResoucecommandresponseList([]);
};


/**
 * optional string unknown = 2;
 * @return {string}
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.getUnknown = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI} returns this
 */
proto.nestlabs.gateway.v1.ResourceCommandResponseFromAPI.prototype.setUnknown = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.nestlabs.gateway.v1);
